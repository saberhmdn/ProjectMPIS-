{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\OneDrive\\\\Bureau\\\\projetMIPS$\\\\frontend\\\\src\\\\pages\\\\CreateExam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ExamService from '../services/ExamService';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateExam = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    duration: 60,\n    startTime: '',\n    endTime: '',\n    examType: 'mcq',\n    isActive: true,\n    questions: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Check if token exists\n    const token = localStorage.getItem('token');\n    console.log('Token in localStorage:', token ? 'exists' : 'missing');\n\n    // Redirect if not logged in or not a teacher\n    if (!token || !user) {\n      console.log('No token or user, redirecting to login');\n      navigate('/login');\n      return;\n    }\n    if (user.role !== 'teacher') {\n      console.log('User is not a teacher, redirecting');\n      navigate('/student-dashboard');\n      return;\n    }\n  }, [user, navigate]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Format date-time for input fields\n  const formatDateTime = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    if (isNaN(date.getTime())) return '';\n    return date.toISOString().slice(0, 16);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      setError('');\n\n      // Check if token exists before submitting\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('You are not logged in. Please log in again.');\n        setLoading(false);\n        navigate('/login');\n        return;\n      }\n\n      // Validate dates\n      const startDate = new Date(formData.startTime);\n      const endDate = new Date(formData.endTime);\n      if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n        setError('Please enter valid start and end times');\n        setLoading(false);\n        return;\n      }\n      if (endDate <= startDate) {\n        setError('End time must be after start time');\n        setLoading(false);\n        return;\n      }\n\n      // Format the data to match the backend model\n      const examData = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        duration: parseInt(formData.duration, 10),\n        startTime: formData.startTime,\n        endTime: formData.endTime,\n        examType: formData.examType,\n        isActive: formData.isActive,\n        questions: [] // Will be added later in a separate page\n      };\n      console.log('Submitting exam data:', examData);\n\n      // Validate required fields\n      if (!examData.title || !examData.description || !examData.duration || !examData.startTime || !examData.endTime || !examData.examType) {\n        setError('Please fill in all required fields');\n        setLoading(false);\n        return;\n      }\n      const result = await ExamService.createExam(examData);\n      console.log('Exam created successfully:', result);\n\n      // Redirect to add questions page instead of dashboard\n      navigate(`/add-questions/${result.exam._id}`);\n    } catch (err) {\n      console.error('Error creating exam:', err);\n      if (err.response) {\n        // Server responded with an error\n        if (err.response.status === 401) {\n          setError('Authentication failed. Please log in again.');\n          // Redirect to login after a short delay\n          setTimeout(() => {\n            navigate('/login');\n          }, 2000);\n        } else if (err.response.status === 400) {\n          // Validation error\n          if (err.response.data.errors) {\n            // Format validation errors\n            const errorMessages = Object.values(err.response.data.errors).join(', ');\n            setError(`Validation error: ${errorMessages}`);\n          } else {\n            var _err$response$data;\n            setError(((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Invalid exam data');\n          }\n        } else {\n          var _err$response$data2;\n          setError(((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : _err$response$data2.message) || 'Failed to create exam');\n        }\n      } else {\n        setError('Network error. Please check your connection and try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-lg w-full mx-auto bg-white p-8 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900 mb-6\",\n        children: \"Create Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Exam Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: formData.title,\n            onChange: handleChange,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Description *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: formData.description,\n            onChange: handleChange,\n            rows: \"3\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"examType\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Exam Type *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"examType\",\n            name: \"examType\",\n            value: formData.examType,\n            onChange: handleChange,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mcq\",\n              children: \"Multiple Choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"written\",\n              children: \"Written\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"duration\",\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              children: \"Duration (minutes) *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"duration\",\n              name: \"duration\",\n              value: formData.duration,\n              onChange: handleChange,\n              min: \"5\",\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"startTime\",\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              children: \"Start Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              id: \"startTime\",\n              name: \"startTime\",\n              value: formatDateTime(formData.startTime),\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"endTime\",\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              children: \"End Time *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              id: \"endTime\",\n              name: \"endTime\",\n              value: formatDateTime(formData.endTime),\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6 p-4 bg-gray-50 rounded-lg border border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-800 mb-2\",\n            children: \"Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: \"You can add questions after creating the exam.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate('/teacher-dashboard'),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            disabled: loading,\n            children: loading ? 'Creating...' : 'Create Exam'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateExam, \"PLEpcrjdfy8C0ZwKhA0Gy2b7jyA=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CreateExam;\nexport default CreateExam;\nvar _c;\n$RefreshReg$(_c, \"CreateExam\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ExamService","useAuth","jsxDEV","_jsxDEV","CreateExam","_s","navigate","user","logout","formData","setFormData","title","description","duration","startTime","endTime","examType","isActive","questions","loading","setLoading","error","setError","token","localStorage","getItem","console","log","role","handleChange","e","name","value","target","prev","formatDateTime","dateString","date","Date","isNaN","getTime","toISOString","slice","handleSubmit","preventDefault","startDate","endDate","examData","trim","parseInt","result","createExam","exam","_id","err","response","status","setTimeout","data","errors","errorMessages","Object","values","join","_err$response$data","message","_err$response$data2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","rows","min","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/pages/CreateExam.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ExamService from '../services/ExamService';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst CreateExam = () => {\r\n    const navigate = useNavigate();\r\n    const { user, logout } = useAuth();\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        description: '',\r\n        duration: 60,\r\n        startTime: '',\r\n        endTime: '',\r\n        examType: 'mcq',\r\n        isActive: true,\r\n        questions: []\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Check if token exists\r\n        const token = localStorage.getItem('token');\r\n        console.log('Token in localStorage:', token ? 'exists' : 'missing');\r\n        \r\n        // Redirect if not logged in or not a teacher\r\n        if (!token || !user) {\r\n            console.log('No token or user, redirecting to login');\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        if (user.role !== 'teacher') {\r\n            console.log('User is not a teacher, redirecting');\r\n            navigate('/student-dashboard');\r\n            return;\r\n        }\r\n    }, [user, navigate]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    // Format date-time for input fields\r\n    const formatDateTime = (dateString) => {\r\n        if (!dateString) return '';\r\n        \r\n        const date = new Date(dateString);\r\n        if (isNaN(date.getTime())) return '';\r\n        \r\n        return date.toISOString().slice(0, 16);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            setLoading(true);\r\n            setError('');\r\n            \r\n            // Check if token exists before submitting\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                setError('You are not logged in. Please log in again.');\r\n                setLoading(false);\r\n                navigate('/login');\r\n                return;\r\n            }\r\n            \r\n            // Validate dates\r\n            const startDate = new Date(formData.startTime);\r\n            const endDate = new Date(formData.endTime);\r\n            \r\n            if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\r\n                setError('Please enter valid start and end times');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            \r\n            if (endDate <= startDate) {\r\n                setError('End time must be after start time');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            \r\n            // Format the data to match the backend model\r\n            const examData = {\r\n                title: formData.title.trim(),\r\n                description: formData.description.trim(),\r\n                duration: parseInt(formData.duration, 10),\r\n                startTime: formData.startTime,\r\n                endTime: formData.endTime,\r\n                examType: formData.examType,\r\n                isActive: formData.isActive,\r\n                questions: [] // Will be added later in a separate page\r\n            };\r\n            \r\n            console.log('Submitting exam data:', examData);\r\n            \r\n            // Validate required fields\r\n            if (!examData.title || !examData.description || !examData.duration || \r\n                !examData.startTime || !examData.endTime || !examData.examType) {\r\n                setError('Please fill in all required fields');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            \r\n            const result = await ExamService.createExam(examData);\r\n            console.log('Exam created successfully:', result);\r\n            \r\n            // Redirect to add questions page instead of dashboard\r\n            navigate(`/add-questions/${result.exam._id}`);\r\n        } catch (err) {\r\n            console.error('Error creating exam:', err);\r\n            \r\n            if (err.response) {\r\n                // Server responded with an error\r\n                if (err.response.status === 401) {\r\n                    setError('Authentication failed. Please log in again.');\r\n                    // Redirect to login after a short delay\r\n                    setTimeout(() => {\r\n                        navigate('/login');\r\n                    }, 2000);\r\n                } else if (err.response.status === 400) {\r\n                    // Validation error\r\n                    if (err.response.data.errors) {\r\n                        // Format validation errors\r\n                        const errorMessages = Object.values(err.response.data.errors).join(', ');\r\n                        setError(`Validation error: ${errorMessages}`);\r\n                    } else {\r\n                        setError(err.response.data?.message || 'Invalid exam data');\r\n                    }\r\n                } else {\r\n                    setError(err.response.data?.message || 'Failed to create exam');\r\n                }\r\n            } else {\r\n                setError('Network error. Please check your connection and try again.');\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"max-w-lg w-full mx-auto bg-white p-8 rounded-lg shadow\">\r\n                <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">\r\n                    Create Exam\r\n                </h1>\r\n                \r\n                {error && (\r\n                    <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\" role=\"alert\">\r\n                        <p>{error}</p>\r\n                    </div>\r\n                )}\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"title\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Exam Title *\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={formData.title}\r\n                            onChange={handleChange}\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"description\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Description *\r\n                        </label>\r\n                        <textarea\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={formData.description}\r\n                            onChange={handleChange}\r\n                            rows=\"3\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            required\r\n                        ></textarea>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"examType\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Exam Type *\r\n                        </label>\r\n                        <select\r\n                            id=\"examType\"\r\n                            name=\"examType\"\r\n                            value={formData.examType}\r\n                            onChange={handleChange}\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            required\r\n                        >\r\n                            <option value=\"mcq\">Multiple Choice</option>\r\n                            <option value=\"written\">Written</option>\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n                        <div>\r\n                            <label htmlFor=\"duration\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                Duration (minutes) *\r\n                            </label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"duration\"\r\n                                name=\"duration\"\r\n                                value={formData.duration}\r\n                                onChange={handleChange}\r\n                                min=\"5\"\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label htmlFor=\"startTime\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                Start Time *\r\n                            </label>\r\n                            <input\r\n                                type=\"datetime-local\"\r\n                                id=\"startTime\"\r\n                                name=\"startTime\"\r\n                                value={formatDateTime(formData.startTime)}\r\n                                onChange={handleChange}\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <label htmlFor=\"endTime\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                                End Time *\r\n                            </label>\r\n                            <input\r\n                                type=\"datetime-local\"\r\n                                id=\"endTime\"\r\n                                name=\"endTime\"\r\n                                value={formatDateTime(formData.endTime)}\r\n                                onChange={handleChange}\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-6 p-4 bg-gray-50 rounded-lg border border-gray-200\">\r\n                        <h2 className=\"text-lg font-semibold text-gray-800 mb-2\">Questions</h2>\r\n                        <p className=\"text-sm text-gray-600\">\r\n                            You can add questions after creating the exam.\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => navigate('/teacher-dashboard')}\r\n                            className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                        >\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Creating...' : 'Create Exam'}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateExam;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}