{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\OneDrive\\\\Bureau\\\\ProjectMPIS$\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../config';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on initial load\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Verify token and get user data\n          const response = await axios.get(`${config.API_BASE_URL}/api/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          setUser(response.data.user);\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n  const login = async credentials => {\n    try {\n      console.log('Login attempt with:', credentials);\n\n      // Try the general auth login endpoint first\n      let response;\n      try {\n        response = await axios.post(`${config.API_BASE_URL}/api/auth/login`, credentials);\n      } catch (error) {\n        console.log('General auth login failed, trying role-specific endpoints');\n\n        // If general login fails, try student login\n        try {\n          response = await axios.post(`${config.API_BASE_URL}/api/students/login`, credentials);\n          // If successful, extract student data\n          if (response.data.student) {\n            response.data.user = response.data.student;\n            response.data.user.role = 'student';\n          }\n        } catch (studentError) {\n          console.log('Student login failed, trying teacher login');\n\n          // If student login fails, try teacher login\n          response = await axios.post(`${config.API_BASE_URL}/api/teachers/login`, credentials);\n          // If successful, extract teacher data\n          if (response.data.teacher) {\n            response.data.user = response.data.teacher;\n            response.data.user.role = 'teacher';\n          }\n        }\n      }\n      console.log('Login response:', response.data);\n\n      // Extract token and user data\n      const {\n        token,\n        user,\n        student,\n        teacher\n      } = response.data;\n\n      // Use the appropriate user object\n      const userData = user || student || teacher;\n      if (!token || !userData) {\n        throw new Error('Invalid response format from server');\n      }\n      localStorage.setItem('token', token);\n      setUser(userData);\n      return {\n        token,\n        user: userData\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  const register = async (userData, role) => {\n    try {\n      const endpoint = role === 'student' ? `${config.API_BASE_URL}/api/students/register` : `${config.API_BASE_URL}/api/teachers/register`;\n      console.log(`Registering ${role} at endpoint:`, endpoint);\n      console.log('Registration data:', userData);\n      const response = await axios.post(endpoint, userData);\n\n      // If registration is successful, store the token and user data\n      if (response.data && response.data.token) {\n        localStorage.setItem('token', response.data.token);\n\n        // Store the appropriate user data based on role\n        if (role === 'student') {\n          localStorage.setItem('user', JSON.stringify(response.data.student));\n          setUser(response.data.student);\n        } else {\n          localStorage.setItem('user', JSON.stringify(response.data.teacher));\n          setUser(response.data.teacher);\n        }\n        setLoading(false);\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Registration error in AuthContext:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","config","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkLoggedIn","token","localStorage","getItem","response","get","API_BASE_URL","headers","Authorization","data","error","console","removeItem","login","credentials","log","post","student","role","studentError","teacher","userData","Error","setItem","logout","register","endpoint","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/saber/OneDrive/Bureau/ProjectMPIS$/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport config from '../config';\r\n\r\n// Create the context\r\nexport const AuthContext = createContext();\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Check if user is logged in on initial load\r\n        const checkLoggedIn = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                \r\n                if (token) {\r\n                    // Verify token and get user data\r\n                    const response = await axios.get(`${config.API_BASE_URL}/api/auth/me`, {\r\n                        headers: {\r\n                            Authorization: `Bearer ${token}`\r\n                        }\r\n                    });\r\n                    \r\n                    setUser(response.data.user);\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth check error:', error);\r\n                localStorage.removeItem('token');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        checkLoggedIn();\r\n    }, []);\r\n\r\n    const login = async (credentials) => {\r\n        try {\r\n            console.log('Login attempt with:', credentials);\r\n            \r\n            // Try the general auth login endpoint first\r\n            let response;\r\n            try {\r\n                response = await axios.post(`${config.API_BASE_URL}/api/auth/login`, credentials);\r\n            } catch (error) {\r\n                console.log('General auth login failed, trying role-specific endpoints');\r\n                \r\n                // If general login fails, try student login\r\n                try {\r\n                    response = await axios.post(`${config.API_BASE_URL}/api/students/login`, credentials);\r\n                    // If successful, extract student data\r\n                    if (response.data.student) {\r\n                        response.data.user = response.data.student;\r\n                        response.data.user.role = 'student';\r\n                    }\r\n                } catch (studentError) {\r\n                    console.log('Student login failed, trying teacher login');\r\n                    \r\n                    // If student login fails, try teacher login\r\n                    response = await axios.post(`${config.API_BASE_URL}/api/teachers/login`, credentials);\r\n                    // If successful, extract teacher data\r\n                    if (response.data.teacher) {\r\n                        response.data.user = response.data.teacher;\r\n                        response.data.user.role = 'teacher';\r\n                    }\r\n                }\r\n            }\r\n            \r\n            console.log('Login response:', response.data);\r\n            \r\n            // Extract token and user data\r\n            const { token, user, student, teacher } = response.data;\r\n            \r\n            // Use the appropriate user object\r\n            const userData = user || student || teacher;\r\n            \r\n            if (!token || !userData) {\r\n                throw new Error('Invalid response format from server');\r\n            }\r\n            \r\n            localStorage.setItem('token', token);\r\n            setUser(userData);\r\n            \r\n            return { token, user: userData };\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    const register = async (userData, role) => {\r\n        try {\r\n            const endpoint = role === 'student' \r\n                ? `${config.API_BASE_URL}/api/students/register` \r\n                : `${config.API_BASE_URL}/api/teachers/register`;\r\n            \r\n            console.log(`Registering ${role} at endpoint:`, endpoint);\r\n            console.log('Registration data:', userData);\r\n            \r\n            const response = await axios.post(endpoint, userData);\r\n            \r\n            // If registration is successful, store the token and user data\r\n            if (response.data && response.data.token) {\r\n                localStorage.setItem('token', response.data.token);\r\n                \r\n                // Store the appropriate user data based on role\r\n                if (role === 'student') {\r\n                    localStorage.setItem('user', JSON.stringify(response.data.student));\r\n                    setUser(response.data.student);\r\n                } else {\r\n                    localStorage.setItem('user', JSON.stringify(response.data.teacher));\r\n                    setUser(response.data.teacher);\r\n                }\r\n                \r\n                setLoading(false);\r\n            }\r\n            \r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Registration error in AuthContext:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, loading, login, logout, register }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}