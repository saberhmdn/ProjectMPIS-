{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\n\n// Create axios instance with the base URL from config\nconst api = axios.create({\n  baseURL: config.API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 15000 // 15 second timeout\n});\n\n// Add a request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('API Request:', config.method.toUpperCase(), config.url);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.config.url);\n  return response;\n}, error => {\n  console.error('API Error:', error);\n  if (error.code === 'ECONNABORTED') {\n    console.error('Request timeout');\n    error.message = 'Request timeout. Server is not responding.';\n  }\n  if (!error.response) {\n    console.error('Network error - no response');\n    error.message = 'Cannot connect to server. Please check if the server is running.';\n  } else if (error.response.status === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  } else if (error.response.status === 404) {\n    console.error('Endpoint not found:', error.config.url);\n    error.message = `API endpoint not found: ${error.config.url}`;\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","config","api","create","baseURL","API_BASE_URL","headers","timeout","interceptors","request","use","token","localStorage","getItem","console","log","method","toUpperCase","url","error","Promise","reject","response","status","code","message","removeItem","window","location","href"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from '../config';\r\n\r\n// Create axios instance with the base URL from config\r\nconst api = axios.create({\r\n    baseURL: config.API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    timeout: 15000 // 15 second timeout\r\n});\r\n\r\n// Add a request interceptor to include auth token\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        console.log('API Request:', config.method.toUpperCase(), config.url);\r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('Request error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add a response interceptor to handle errors\r\napi.interceptors.response.use(\r\n    (response) => {\r\n        console.log('API Response:', response.status, response.config.url);\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('API Error:', error);\r\n        \r\n        if (error.code === 'ECONNABORTED') {\r\n            console.error('Request timeout');\r\n            error.message = 'Request timeout. Server is not responding.';\r\n        }\r\n        \r\n        if (!error.response) {\r\n            console.error('Network error - no response');\r\n            error.message = 'Cannot connect to server. Please check if the server is running.';\r\n        } else if (error.response.status === 401) {\r\n            // Handle unauthorized access\r\n            localStorage.removeItem('token');\r\n            window.location.href = '/login';\r\n        } else if (error.response.status === 404) {\r\n            console.error('Endpoint not found:', error.config.url);\r\n            error.message = `API endpoint not found: ${error.config.url}`;\r\n        }\r\n        \r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api; \r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;;AAE9B;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,MAAM,CAACI,YAAY;EAC5BC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAC;AACnB,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBT,MAAM,IAAK;EACR,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPV,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD;EACAG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEd,MAAM,CAACe,MAAM,CAACC,WAAW,CAAC,CAAC,EAAEhB,MAAM,CAACiB,GAAG,CAAC;EACpE,OAAOjB,MAAM;AACjB,CAAC,EACAkB,KAAK,IAAK;EACPL,OAAO,CAACK,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAjB,GAAG,CAACM,YAAY,CAACc,QAAQ,CAACZ,GAAG,CACxBY,QAAQ,IAAK;EACVR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEO,QAAQ,CAACC,MAAM,EAAED,QAAQ,CAACrB,MAAM,CAACiB,GAAG,CAAC;EAClE,OAAOI,QAAQ;AACnB,CAAC,EACAH,KAAK,IAAK;EACPL,OAAO,CAACK,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAElC,IAAIA,KAAK,CAACK,IAAI,KAAK,cAAc,EAAE;IAC/BV,OAAO,CAACK,KAAK,CAAC,iBAAiB,CAAC;IAChCA,KAAK,CAACM,OAAO,GAAG,4CAA4C;EAChE;EAEA,IAAI,CAACN,KAAK,CAACG,QAAQ,EAAE;IACjBR,OAAO,CAACK,KAAK,CAAC,6BAA6B,CAAC;IAC5CA,KAAK,CAACM,OAAO,GAAG,kEAAkE;EACtF,CAAC,MAAM,IAAIN,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACtC;IACAX,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC,CAAC,MAAM,IAAIV,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACtCT,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAClB,MAAM,CAACiB,GAAG,CAAC;IACtDC,KAAK,CAACM,OAAO,GAAG,2BAA2BN,KAAK,CAAClB,MAAM,CAACiB,GAAG,EAAE;EACjE;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}