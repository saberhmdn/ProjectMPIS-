{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nconst API_URL = `${config.API_BASE_URL}/api/courses`;\nclass CourseService {\n  // Get all courses for a teacher\n  async getTeacherCourses() {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/teacher`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  }\n\n  // Create a new course\n  async createCourse(courseData) {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(API_URL, courseData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  }\n\n  // Get a specific course by ID\n  async getCourseById(courseId) {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/${courseId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  }\n\n  // Update a course\n  async updateCourse(courseId, courseData) {\n    const token = localStorage.getItem('token');\n    const response = await axios.put(`${API_URL}/${courseId}`, courseData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  }\n\n  // Delete a course\n  async deleteCourse(courseId) {\n    const token = localStorage.getItem('token');\n    const response = await axios.delete(`${API_URL}/${courseId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  }\n}\nexport default new CourseService();","map":{"version":3,"names":["axios","config","API_URL","API_BASE_URL","CourseService","getTeacherCourses","token","localStorage","getItem","response","get","headers","Authorization","data","createCourse","courseData","post","getCourseById","courseId","updateCourse","put","deleteCourse","delete"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/services/CourseService.js"],"sourcesContent":["import axios from 'axios';\nimport config from '../config';\n\nconst API_URL = `${config.API_BASE_URL}/api/courses`;\n\nclass CourseService {\n    // Get all courses for a teacher\n    async getTeacherCourses() {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_URL}/teacher`, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n        return response.data;\n    }\n\n    // Create a new course\n    async createCourse(courseData) {\n        const token = localStorage.getItem('token');\n        const response = await axios.post(API_URL, courseData, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n        return response.data;\n    }\n\n    // Get a specific course by ID\n    async getCourseById(courseId) {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_URL}/${courseId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n        return response.data;\n    }\n\n    // Update a course\n    async updateCourse(courseId, courseData) {\n        const token = localStorage.getItem('token');\n        const response = await axios.put(`${API_URL}/${courseId}`, courseData, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n        return response.data;\n    }\n\n    // Delete a course\n    async deleteCourse(courseId) {\n        const token = localStorage.getItem('token');\n        const response = await axios.delete(`${API_URL}/${courseId}`, {\n            headers: { Authorization: `Bearer ${token}` }\n        });\n        return response.data;\n    }\n}\n\nexport default new CourseService();\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAE9B,MAAMC,OAAO,GAAG,GAAGD,MAAM,CAACE,YAAY,cAAc;AAEpD,MAAMC,aAAa,CAAC;EAChB;EACA,MAAMC,iBAAiBA,CAAA,EAAG;IACtB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGR,OAAO,UAAU,EAAE;MACnDS,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACxB;;EAEA;EACA,MAAMC,YAAYA,CAACC,UAAU,EAAE;IAC3B,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAI,CAACd,OAAO,EAAEa,UAAU,EAAE;MACnDJ,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACxB;;EAEA;EACA,MAAMI,aAAaA,CAACC,QAAQ,EAAE;IAC1B,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGR,OAAO,IAAIgB,QAAQ,EAAE,EAAE;MACvDP,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACxB;;EAEA;EACA,MAAMM,YAAYA,CAACD,QAAQ,EAAEH,UAAU,EAAE;IACrC,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACoB,GAAG,CAAC,GAAGlB,OAAO,IAAIgB,QAAQ,EAAE,EAAEH,UAAU,EAAE;MACnEJ,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACxB;;EAEA;EACA,MAAMQ,YAAYA,CAACH,QAAQ,EAAE;IACzB,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACsB,MAAM,CAAC,GAAGpB,OAAO,IAAIgB,QAAQ,EAAE,EAAE;MAC1DP,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACxB;AACJ;AAEA,eAAe,IAAIT,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}