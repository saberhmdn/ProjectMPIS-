{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\OneDrive\\\\Bureau\\\\projetMIPS$\\\\frontend\\\\src\\\\pages\\\\AddQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ExamService from '../services/ExamService';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddQuestions = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [exam, setExam] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({\n    questionText: '',\n    questionType: 'multiple-choice',\n    options: [{\n      text: '',\n      isCorrect: false\n    }, {\n      text: '',\n      isCorrect: false\n    }, {\n      text: '',\n      isCorrect: false\n    }, {\n      text: '',\n      isCorrect: false\n    }],\n    points: 1\n  });\n  useEffect(() => {\n    // Check if user is logged in and is a teacher\n    if (!user || user.role !== 'teacher') {\n      navigate('/login');\n      return;\n    }\n\n    // Fetch exam details\n    const fetchExam = async () => {\n      try {\n        setLoading(true);\n        const response = await ExamService.getExamById(examId);\n        setExam(response);\n\n        // If exam already has questions, load them\n        if (response.questions && response.questions.length > 0) {\n          setQuestions(response.questions);\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching exam:', err);\n        setError('Failed to load exam details');\n        setLoading(false);\n      }\n    };\n    fetchExam();\n  }, [examId, navigate, user]);\n  const handleQuestionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentQuestion(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleOptionChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedOptions = [...currentQuestion.options];\n    if (name === 'isCorrect') {\n      // For radio buttons, set all options to false first\n      updatedOptions.forEach(option => option.isCorrect = false);\n      updatedOptions[index].isCorrect = true;\n    } else {\n      updatedOptions[index].text = value;\n    }\n    setCurrentQuestion(prev => ({\n      ...prev,\n      options: updatedOptions\n    }));\n  };\n  const addQuestion = () => {\n    // Validate question\n    if (!currentQuestion.questionText.trim()) {\n      setError('Question text is required');\n      return;\n    }\n\n    // For multiple choice, validate that at least one option is selected as correct\n    if (currentQuestion.questionType === 'multiple-choice') {\n      const hasCorrectOption = currentQuestion.options.some(option => option.isCorrect);\n      if (!hasCorrectOption) {\n        setError('Please select a correct answer');\n        return;\n      }\n\n      // Validate that all options have text\n      const emptyOptions = currentQuestion.options.filter(option => !option.text.trim());\n      if (emptyOptions.length > 0) {\n        setError('All options must have text');\n        return;\n      }\n    }\n\n    // Add question to the list\n    setQuestions(prev => [...prev, {\n      ...currentQuestion\n    }]);\n\n    // Reset current question\n    setCurrentQuestion({\n      questionText: '',\n      questionType: 'multiple-choice',\n      options: [{\n        text: '',\n        isCorrect: false\n      }, {\n        text: '',\n        isCorrect: false\n      }, {\n        text: '',\n        isCorrect: false\n      }, {\n        text: '',\n        isCorrect: false\n      }],\n      points: 1\n    });\n    setError('');\n  };\n  const removeQuestion = index => {\n    setQuestions(prev => prev.filter((_, i) => i !== index));\n  };\n  const saveQuestions = async () => {\n    try {\n      setLoading(true);\n\n      // Validate that there's at least one question\n      if (questions.length === 0) {\n        setError('Please add at least one question');\n        setLoading(false);\n        return;\n      }\n      await ExamService.updateExamQuestions(examId, questions);\n      navigate('/teacher-dashboard');\n    } catch (err) {\n      console.error('Error saving questions:', err);\n      setError('Failed to save questions');\n      setLoading(false);\n    }\n  };\n  if (loading && !exam) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center mb-8\",\n        children: [\"Add Questions to \", exam === null || exam === void 0 ? void 0 : exam.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\",\n        role: \"alert\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-md rounded-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Add New Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Question Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"questionText\",\n            value: currentQuestion.questionText,\n            onChange: handleQuestionChange,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            rows: \"3\",\n            placeholder: \"Enter your question here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Question Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"questionType\",\n            value: currentQuestion.questionType,\n            onChange: handleQuestionChange,\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"multiple-choice\",\n              children: \"Multiple Choice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true-false\",\n              children: \"True/False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"short-answer\",\n              children: \"Short Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), currentQuestion.questionType === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"isCorrect\",\n              checked: option.isCorrect,\n              onChange: e => handleOptionChange(index, e),\n              className: \"mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option.text,\n              onChange: e => handleOptionChange(index, {\n                target: {\n                  name: 'text',\n                  value: e.target.value\n                }\n              }),\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              placeholder: `Option ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Points\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"points\",\n            value: currentQuestion.points,\n            onChange: handleQuestionChange,\n            min: \"1\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addQuestion,\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Add Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-md rounded-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: [\"Questions (\", questions.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No questions added yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border p-4 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-medium\",\n                children: [index + 1, \". \", question.questionText]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeQuestion(index),\n                className: \"text-red-500 hover:text-red-700\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mt-1\",\n              children: [\"Type: \", question.questionType, \" | Points: \", question.points]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 37\n            }, this), question.questionType === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium\",\n                children: \"Options:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc pl-5\",\n                children: question.options.map((option, optIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: option.isCorrect ? 'text-green-600 font-medium' : '',\n                  children: [option.text, \" \", option.isCorrect && '(Correct)']\n                }, optIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/teacher-dashboard'),\n          className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveQuestions,\n          disabled: loading || questions.length === 0,\n          className: \"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: loading ? 'Saving...' : 'Save Questions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n_s(AddQuestions, \"iWs4Kuexkj7IiAmffp8OV5vYnr0=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = AddQuestions;\nexport default AddQuestions;\nvar _c;\n$RefreshReg$(_c, \"AddQuestions\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","ExamService","useAuth","jsxDEV","_jsxDEV","AddQuestions","_s","examId","navigate","user","exam","setExam","loading","setLoading","error","setError","questions","setQuestions","currentQuestion","setCurrentQuestion","questionText","questionType","options","text","isCorrect","points","role","fetchExam","response","getExamById","length","err","console","handleQuestionChange","e","name","value","target","prev","handleOptionChange","index","updatedOptions","forEach","option","addQuestion","trim","hasCorrectOption","some","emptyOptions","filter","removeQuestion","_","i","saveQuestions","updateExamQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onChange","rows","placeholder","map","type","checked","min","onClick","question","optIndex","disabled","_c","$RefreshReg$"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/pages/AddQuestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport ExamService from '../services/ExamService';\nimport { useAuth } from '../context/AuthContext';\n\nconst AddQuestions = () => {\n    const { examId } = useParams();\n    const navigate = useNavigate();\n    const { user } = useAuth();\n    const [exam, setExam] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState({\n        questionText: '',\n        questionType: 'multiple-choice',\n        options: [\n            { text: '', isCorrect: false },\n            { text: '', isCorrect: false },\n            { text: '', isCorrect: false },\n            { text: '', isCorrect: false }\n        ],\n        points: 1\n    });\n\n    useEffect(() => {\n        // Check if user is logged in and is a teacher\n        if (!user || user.role !== 'teacher') {\n            navigate('/login');\n            return;\n        }\n\n        // Fetch exam details\n        const fetchExam = async () => {\n            try {\n                setLoading(true);\n                const response = await ExamService.getExamById(examId);\n                setExam(response);\n                \n                // If exam already has questions, load them\n                if (response.questions && response.questions.length > 0) {\n                    setQuestions(response.questions);\n                }\n                \n                setLoading(false);\n            } catch (err) {\n                console.error('Error fetching exam:', err);\n                setError('Failed to load exam details');\n                setLoading(false);\n            }\n        };\n\n        fetchExam();\n    }, [examId, navigate, user]);\n\n    const handleQuestionChange = (e) => {\n        const { name, value } = e.target;\n        setCurrentQuestion(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const handleOptionChange = (index, e) => {\n        const { name, value } = e.target;\n        const updatedOptions = [...currentQuestion.options];\n        \n        if (name === 'isCorrect') {\n            // For radio buttons, set all options to false first\n            updatedOptions.forEach(option => option.isCorrect = false);\n            updatedOptions[index].isCorrect = true;\n        } else {\n            updatedOptions[index].text = value;\n        }\n        \n        setCurrentQuestion(prev => ({\n            ...prev,\n            options: updatedOptions\n        }));\n    };\n\n    const addQuestion = () => {\n        // Validate question\n        if (!currentQuestion.questionText.trim()) {\n            setError('Question text is required');\n            return;\n        }\n        \n        // For multiple choice, validate that at least one option is selected as correct\n        if (currentQuestion.questionType === 'multiple-choice') {\n            const hasCorrectOption = currentQuestion.options.some(option => option.isCorrect);\n            if (!hasCorrectOption) {\n                setError('Please select a correct answer');\n                return;\n            }\n            \n            // Validate that all options have text\n            const emptyOptions = currentQuestion.options.filter(option => !option.text.trim());\n            if (emptyOptions.length > 0) {\n                setError('All options must have text');\n                return;\n            }\n        }\n        \n        // Add question to the list\n        setQuestions(prev => [...prev, { ...currentQuestion }]);\n        \n        // Reset current question\n        setCurrentQuestion({\n            questionText: '',\n            questionType: 'multiple-choice',\n            options: [\n                { text: '', isCorrect: false },\n                { text: '', isCorrect: false },\n                { text: '', isCorrect: false },\n                { text: '', isCorrect: false }\n            ],\n            points: 1\n        });\n        \n        setError('');\n    };\n\n    const removeQuestion = (index) => {\n        setQuestions(prev => prev.filter((_, i) => i !== index));\n    };\n\n    const saveQuestions = async () => {\n        try {\n            setLoading(true);\n            \n            // Validate that there's at least one question\n            if (questions.length === 0) {\n                setError('Please add at least one question');\n                setLoading(false);\n                return;\n            }\n            \n            await ExamService.updateExamQuestions(examId, questions);\n            navigate('/teacher-dashboard');\n        } catch (err) {\n            console.error('Error saving questions:', err);\n            setError('Failed to save questions');\n            setLoading(false);\n        }\n    };\n\n    if (loading && !exam) {\n        return (\n            <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n                <div className=\"spinner-border text-primary\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-3xl mx-auto\">\n                <h1 className=\"text-3xl font-bold text-center mb-8\">\n                    Add Questions to {exam?.title}\n                </h1>\n                \n                {error && (\n                    <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6\" role=\"alert\">\n                        <p>{error}</p>\n                    </div>\n                )}\n                \n                {/* Question Form */}\n                <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\n                    <h2 className=\"text-xl font-semibold mb-4\">Add New Question</h2>\n                    \n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                            Question Text\n                        </label>\n                        <textarea\n                            name=\"questionText\"\n                            value={currentQuestion.questionText}\n                            onChange={handleQuestionChange}\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            rows=\"3\"\n                            placeholder=\"Enter your question here\"\n                        ></textarea>\n                    </div>\n                    \n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                            Question Type\n                        </label>\n                        <select\n                            name=\"questionType\"\n                            value={currentQuestion.questionType}\n                            onChange={handleQuestionChange}\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        >\n                            <option value=\"multiple-choice\">Multiple Choice</option>\n                            <option value=\"true-false\">True/False</option>\n                            <option value=\"short-answer\">Short Answer</option>\n                        </select>\n                    </div>\n                    \n                    {currentQuestion.questionType === 'multiple-choice' && (\n                        <div className=\"mb-4\">\n                            <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                                Options\n                            </label>\n                            {currentQuestion.options.map((option, index) => (\n                                <div key={index} className=\"flex items-center mb-2\">\n                                    <input\n                                        type=\"radio\"\n                                        name=\"isCorrect\"\n                                        checked={option.isCorrect}\n                                        onChange={(e) => handleOptionChange(index, e)}\n                                        className=\"mr-2\"\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        value={option.text}\n                                        onChange={(e) => handleOptionChange(index, { target: { name: 'text', value: e.target.value } })}\n                                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                        placeholder={`Option ${index + 1}`}\n                                    />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                    \n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                            Points\n                        </label>\n                        <input\n                            type=\"number\"\n                            name=\"points\"\n                            value={currentQuestion.points}\n                            onChange={handleQuestionChange}\n                            min=\"1\"\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        />\n                    </div>\n                    \n                    <button\n                        type=\"button\"\n                        onClick={addQuestion}\n                        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    >\n                        Add Question\n                    </button>\n                </div>\n                \n                {/* Questions List */}\n                <div className=\"bg-white shadow-md rounded-lg p-6 mb-8\">\n                    <h2 className=\"text-xl font-semibold mb-4\">\n                        Questions ({questions.length})\n                    </h2>\n                    \n                    {questions.length === 0 ? (\n                        <p className=\"text-gray-500\">No questions added yet.</p>\n                    ) : (\n                        <div className=\"space-y-4\">\n                            {questions.map((question, index) => (\n                                <div key={index} className=\"border p-4 rounded\">\n                                    <div className=\"flex justify-between items-start\">\n                                        <h3 className=\"font-medium\">\n                                            {index + 1}. {question.questionText}\n                                        </h3>\n                                        <button\n                                            onClick={() => removeQuestion(index)}\n                                            className=\"text-red-500 hover:text-red-700\"\n                                        >\n                                            Remove\n                                        </button>\n                                    </div>\n                                    <p className=\"text-sm text-gray-500 mt-1\">\n                                        Type: {question.questionType} | Points: {question.points}\n                                    </p>\n                                    \n                                    {question.questionType === 'multiple-choice' && (\n                                        <div className=\"mt-2\">\n                                            <p className=\"text-sm font-medium\">Options:</p>\n                                            <ul className=\"list-disc pl-5\">\n                                                {question.options.map((option, optIndex) => (\n                                                    <li key={optIndex} className={option.isCorrect ? 'text-green-600 font-medium' : ''}>\n                                                        {option.text} {option.isCorrect && '(Correct)'}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    )}\n                </div>\n                \n                <div className=\"flex justify-between\">\n                    <button\n                        onClick={() => navigate('/teacher-dashboard')}\n                        className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        onClick={saveQuestions}\n                        disabled={loading || questions.length === 0}\n                        className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    >\n                        {loading ? 'Saving...' : 'Save Questions'}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AddQuestions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}