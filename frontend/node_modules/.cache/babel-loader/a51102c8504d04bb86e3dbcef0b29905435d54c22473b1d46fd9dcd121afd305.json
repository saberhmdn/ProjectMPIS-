{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\OneDrive\\\\Bureau\\\\projetMIPS$\\\\frontend\\\\src\\\\components\\\\ServerStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServerStatus = () => {\n  _s();\n  const [status, setStatus] = useState('Checking...');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const checkServerStatus = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/health', {\n          timeout: 5000\n        });\n        if (response.status === 200) {\n          setStatus('Connected');\n          setError(null);\n        } else {\n          setStatus('Error');\n          setError(`Unexpected response: ${response.status}`);\n        }\n      } catch (err) {\n        setStatus('Disconnected');\n        if (err.code === 'ECONNABORTED') {\n          setError('Connection timeout. Server is not responding.');\n        } else if (!err.response) {\n          setError('Cannot connect to server. Please check if the server is running.');\n        } else {\n          setError(`Error: ${err.message}`);\n        }\n        console.error('Server check error:', err);\n      }\n    };\n    checkServerStatus();\n\n    // Check server status every 30 seconds\n    const intervalId = setInterval(checkServerStatus, 30000);\n\n    // Clean up interval on component unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"server-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-indicator ${status.toLowerCase()}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-text\",\n        children: [\"Server: \", status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n                .server-status {\n                    margin-top: 10px;\n                    text-align: center;\n                }\n                .status-indicator {\n                    display: inline-flex;\n                    align-items: center;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 0.8rem;\n                }\n                .connected {\n                    background-color: rgba(0, 128, 0, 0.1);\n                    color: green;\n                }\n                .disconnected {\n                    background-color: rgba(255, 0, 0, 0.1);\n                    color: red;\n                }\n                .checking {\n                    background-color: rgba(255, 165, 0, 0.1);\n                    color: orange;\n                }\n                .error {\n                    background-color: rgba(255, 0, 0, 0.1);\n                    color: red;\n                }\n                .error-message {\n                    margin-top: 5px;\n                    color: #d32f2f;\n                    font-size: 0.75rem;\n                }\n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ServerStatus, \"Fwy/KjsaPUFMqNB8y8uf+FjiWwk=\");\n_c = ServerStatus;\nexport default ServerStatus;\nvar _c;\n$RefreshReg$(_c, \"ServerStatus\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ServerStatus","_s","status","setStatus","error","setError","checkServerStatus","response","get","timeout","err","code","message","console","intervalId","setInterval","clearInterval","className","children","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","jsx","_c","$RefreshReg$"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/components/ServerStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ServerStatus = () => {\n    const [status, setStatus] = useState('Checking...');\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const checkServerStatus = async () => {\n            try {\n                const response = await axios.get('http://localhost:5001/api/health', { timeout: 5000 });\n                if (response.status === 200) {\n                    setStatus('Connected');\n                    setError(null);\n                } else {\n                    setStatus('Error');\n                    setError(`Unexpected response: ${response.status}`);\n                }\n            } catch (err) {\n                setStatus('Disconnected');\n                if (err.code === 'ECONNABORTED') {\n                    setError('Connection timeout. Server is not responding.');\n                } else if (!err.response) {\n                    setError('Cannot connect to server. Please check if the server is running.');\n                } else {\n                    setError(`Error: ${err.message}`);\n                }\n                console.error('Server check error:', err);\n            }\n        };\n\n        checkServerStatus();\n        \n        // Check server status every 30 seconds\n        const intervalId = setInterval(checkServerStatus, 30000);\n        \n        // Clean up interval on component unmount\n        return () => clearInterval(intervalId);\n    }, []);\n\n    return (\n        <div className=\"server-status\">\n            <div className={`status-indicator ${status.toLowerCase()}`}>\n                <span className=\"status-text\">Server: {status}</span>\n                {error && <div className=\"error-message\">{error}</div>}\n            </div>\n            <style jsx>{`\n                .server-status {\n                    margin-top: 10px;\n                    text-align: center;\n                }\n                .status-indicator {\n                    display: inline-flex;\n                    align-items: center;\n                    padding: 4px 8px;\n                    border-radius: 4px;\n                    font-size: 0.8rem;\n                }\n                .connected {\n                    background-color: rgba(0, 128, 0, 0.1);\n                    color: green;\n                }\n                .disconnected {\n                    background-color: rgba(255, 0, 0, 0.1);\n                    color: red;\n                }\n                .checking {\n                    background-color: rgba(255, 165, 0, 0.1);\n                    color: orange;\n                }\n                .error {\n                    background-color: rgba(255, 0, 0, 0.1);\n                    color: red;\n                }\n                .error-message {\n                    margin-top: 5px;\n                    color: #d32f2f;\n                    font-size: 0.75rem;\n                }\n            `}</style>\n        </div>\n    );\n};\n\nexport default ServerStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}