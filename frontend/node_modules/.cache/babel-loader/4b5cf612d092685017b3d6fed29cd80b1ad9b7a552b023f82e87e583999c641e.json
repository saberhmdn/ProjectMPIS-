{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\OneDrive\\\\Bureau\\\\projetMIPS$\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Make sure token is included in the request\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          const response = await api.get('/api/auth/me');\n\n          // Add role to user data if it's not included in the response\n          const userData = response.data;\n          if (!userData.role) {\n            // Try to determine role from token or set a default\n            userData.role = 'student'; // Default role\n          }\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n  const login = async (email, password, role) => {\n    try {\n      console.log('Login attempt with:', {\n        email,\n        role\n      });\n\n      // Use the correct endpoint based on role\n      const endpoint = role === 'teacher' ? '/api/teachers/login' : '/api/students/login';\n      console.log('Using login endpoint:', endpoint);\n      const response = await api.post(endpoint, {\n        email,\n        password\n      });\n      console.log('Login response received');\n\n      // Extract token and user data\n      const {\n        token,\n        teacher,\n        student\n      } = response.data;\n      const userData = teacher || student;\n      if (!token) {\n        console.error('No token received in login response');\n        throw new Error('Authentication failed: No token received');\n      }\n      if (!userData) {\n        console.error('No user data received in login response');\n        throw new Error('Authentication failed: No user data received');\n      }\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n      console.log('Token stored in localStorage');\n\n      // Create user object with role\n      const userObject = {\n        ...userData,\n        role: role\n      };\n\n      // Set user in context\n      setUser(userObject);\n      console.log('User set in context:', userObject);\n      return {\n        success: true,\n        user: userObject\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (userData, role) => {\n    try {\n      const endpoint = role === 'teacher' ? '/api/teachers/register' : '/api/students/register';\n      const response = await api.post(endpoint, userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  // Add a function to check if the token is valid\n  const checkToken = () => {\n    const token = localStorage.getItem('token');\n    console.log('Current token in localStorage:', token);\n    return !!token;\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    checkToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkLoggedIn","token","localStorage","getItem","defaults","headers","common","response","get","userData","data","role","error","console","removeItem","login","email","password","log","endpoint","post","teacher","student","Error","setItem","userObject","success","register","logout","checkToken","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Check if user is already logged in\r\n        const checkLoggedIn = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    // Make sure token is included in the request\r\n                    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n                    const response = await api.get('/api/auth/me');\r\n                    \r\n                    // Add role to user data if it's not included in the response\r\n                    const userData = response.data;\r\n                    if (!userData.role) {\r\n                        // Try to determine role from token or set a default\r\n                        userData.role = 'student'; // Default role\r\n                    }\r\n                    \r\n                    setUser(userData);\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth check error:', error);\r\n                localStorage.removeItem('token');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        checkLoggedIn();\r\n    }, []);\r\n\r\n    const login = async (email, password, role) => {\r\n        try {\r\n            console.log('Login attempt with:', { email, role });\r\n            \r\n            // Use the correct endpoint based on role\r\n            const endpoint = role === 'teacher' \r\n                ? '/api/teachers/login' \r\n                : '/api/students/login';\r\n            \r\n            console.log('Using login endpoint:', endpoint);\r\n            \r\n            const response = await api.post(endpoint, { email, password });\r\n            console.log('Login response received');\r\n            \r\n            // Extract token and user data\r\n            const { token, teacher, student } = response.data;\r\n            const userData = teacher || student;\r\n            \r\n            if (!token) {\r\n                console.error('No token received in login response');\r\n                throw new Error('Authentication failed: No token received');\r\n            }\r\n            \r\n            if (!userData) {\r\n                console.error('No user data received in login response');\r\n                throw new Error('Authentication failed: No user data received');\r\n            }\r\n            \r\n            // Store token in localStorage\r\n            localStorage.setItem('token', token);\r\n            console.log('Token stored in localStorage');\r\n            \r\n            // Create user object with role\r\n            const userObject = {\r\n                ...userData,\r\n                role: role\r\n            };\r\n            \r\n            // Set user in context\r\n            setUser(userObject);\r\n            console.log('User set in context:', userObject);\r\n            \r\n            return { success: true, user: userObject };\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (userData, role) => {\r\n        try {\r\n            const endpoint = role === 'teacher' ? '/api/teachers/register' : '/api/students/register';\r\n            const response = await api.post(endpoint, userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    // Add a function to check if the token is valid\r\n    const checkToken = () => {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Current token in localStorage:', token);\r\n        return !!token;\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        checkToken\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}