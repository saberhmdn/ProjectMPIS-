{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\OneDrive\\\\Bureau\\\\projetMIPS$\\\\frontend\\\\src\\\\pages\\\\TakeExam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport ExamService from '../services/ExamService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TakeExam = () => {\n  _s();\n  const {\n    examId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    // Check if user is logged in\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n\n    // Fetch exam details\n    const fetchExam = async () => {\n      try {\n        setLoading(true);\n        const examData = await ExamService.getExamById(examId);\n        setExam(examData);\n\n        // Initialize answers object\n        const initialAnswers = {};\n        if (examData.questions && examData.questions.length > 0) {\n          examData.questions.forEach((question, index) => {\n            if (question.type === 'multiple-choice' || question.type === 'true-false') {\n              initialAnswers[index] = '';\n            } else {\n              initialAnswers[index] = '';\n            }\n          });\n        }\n        setAnswers(initialAnswers);\n\n        // Calculate time left\n        const endTime = new Date(examData.endTime).getTime();\n        const now = new Date().getTime();\n        const duration = Math.floor((endTime - now) / 1000); // in seconds\n        setTimeLeft(duration > 0 ? duration : 0);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching exam:', err);\n        setError('Failed to load exam. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchExam();\n  }, [examId, navigate, user]);\n\n  // Timer effect\n  useEffect(() => {\n    if (!timeLeft || timeLeft <= 0) return;\n    const timerId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n\n      // Auto-submit when time runs out\n      if (timeLeft <= 1) {\n        handleSubmit();\n        clearInterval(timerId);\n      }\n    }, 1000);\n    return () => clearInterval(timerId);\n  }, [timeLeft]);\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleAnswerChange = (questionIndex, value) => {\n    setAnswers({\n      ...answers,\n      [questionIndex]: value\n    });\n  };\n  const handleSubmit = async () => {\n    if (submitted) return;\n    try {\n      setLoading(true);\n      setSubmitted(true);\n\n      // Format answers for submission\n      const formattedAnswers = Object.keys(answers).map(index => ({\n        questionId: exam.questions[index]._id,\n        answer: answers[index]\n      }));\n\n      // Submit exam\n      await ExamService.submitExam(examId, {\n        answers: formattedAnswers\n      });\n\n      // Redirect to results or dashboard\n      navigate('/student-dashboard', {\n        state: {\n          message: 'Exam submitted successfully!'\n        }\n      });\n    } catch (err) {\n      console.error('Error submitting exam:', err);\n      setError('Failed to submit exam. Please try again.');\n      setSubmitted(false);\n      setLoading(false);\n    }\n  };\n  if (loading && !exam) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-red-600 mb-4\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/student-dashboard'),\n          className: \"mt-6 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n  if (!exam) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-4\",\n          children: \"Exam Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: \"The exam you're looking for doesn't exist or you don't have permission to access it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/student-dashboard'),\n          className: \"mt-6 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6 border-b pb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-gray-900\",\n            children: exam.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: exam.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-lg font-semibold text-red-600\",\n            children: [\"Time Left: \", formatTime(timeLeft)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: [\"Duration: \", exam.duration, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: \"Exam Submitted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your answers have been recorded.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleSubmit();\n        },\n        children: [exam.questions && exam.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8 p-4 border rounded-lg bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-800\",\n              children: [\"Question \", index + 1, \": \", question.questionText || question.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Points: \", question.points || 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this), question.questionType === 'multiple-choice' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: question.options && question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `q${index}-option${optionIndex}`,\n                name: `question-${index}`,\n                value: optionIndex,\n                checked: answers[index] === optionIndex.toString(),\n                onChange: () => handleAnswerChange(index, optionIndex.toString()),\n                className: \"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `q${index}-option${optionIndex}`,\n                className: \"ml-3 block text-gray-700\",\n                children: typeof option === 'object' ? option.text : option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 49\n              }, this)]\n            }, optionIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 37\n          }, this), question.questionType === 'true-false' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `q${index}-true`,\n                name: `question-${index}`,\n                value: \"true\",\n                checked: answers[index] === 'true',\n                onChange: () => handleAnswerChange(index, 'true'),\n                className: \"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `q${index}-true`,\n                className: \"ml-3 block text-gray-700\",\n                children: \"True\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `q${index}-false`,\n                name: `question-${index}`,\n                value: \"false\",\n                checked: answers[index] === 'false',\n                onChange: () => handleAnswerChange(index, 'false'),\n                className: \"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `q${index}-false`,\n                className: \"ml-3 block text-gray-700\",\n                children: \"False\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 37\n          }, this), (question.questionType === 'short-answer' || question.questionType === 'essay') && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: `q${index}-answer`,\n              name: `question-${index}`,\n              value: answers[index],\n              onChange: e => handleAnswerChange(index, e.target.value),\n              rows: question.questionType === 'essay' ? 6 : 2,\n              className: \"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\",\n              placeholder: \"Enter your answer here...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => navigate('/student-dashboard'),\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            children: \"Exit Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: submitted || loading,\n            className: \"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n            children: submitted ? 'Submitted' : loading ? 'Submitting...' : 'Submit Exam'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n};\n_s(TakeExam, \"wxfCfn/vOZzQYTW2Pe6RjIRd2Lw=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = TakeExam;\nexport default TakeExam;\nvar _c;\n$RefreshReg$(_c, \"TakeExam\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useAuth","ExamService","jsxDEV","_jsxDEV","TakeExam","_s","examId","navigate","user","exam","setExam","answers","setAnswers","loading","setLoading","error","setError","timeLeft","setTimeLeft","submitted","setSubmitted","fetchExam","examData","getExamById","initialAnswers","questions","length","forEach","question","index","type","endTime","Date","getTime","now","duration","Math","floor","err","console","timerId","setInterval","handleSubmit","clearInterval","formatTime","seconds","hours","minutes","secs","toString","padStart","handleAnswerChange","questionIndex","value","formattedAnswers","Object","keys","map","questionId","_id","answer","submitExam","state","message","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","description","onSubmit","e","preventDefault","questionText","text","points","questionType","options","option","optionIndex","id","name","checked","onChange","htmlFor","target","rows","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/pages/TakeExam.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport ExamService from '../services/ExamService';\n\nconst TakeExam = () => {\n    const { examId } = useParams();\n    const navigate = useNavigate();\n    const { user } = useAuth();\n    const [exam, setExam] = useState(null);\n    const [answers, setAnswers] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [timeLeft, setTimeLeft] = useState(null);\n    const [submitted, setSubmitted] = useState(false);\n\n    useEffect(() => {\n        // Check if user is logged in\n        if (!user) {\n            navigate('/login');\n            return;\n        }\n\n        // Fetch exam details\n        const fetchExam = async () => {\n            try {\n                setLoading(true);\n                const examData = await ExamService.getExamById(examId);\n                setExam(examData);\n                \n                // Initialize answers object\n                const initialAnswers = {};\n                if (examData.questions && examData.questions.length > 0) {\n                    examData.questions.forEach((question, index) => {\n                        if (question.type === 'multiple-choice' || question.type === 'true-false') {\n                            initialAnswers[index] = '';\n                        } else {\n                            initialAnswers[index] = '';\n                        }\n                    });\n                }\n                setAnswers(initialAnswers);\n                \n                // Calculate time left\n                const endTime = new Date(examData.endTime).getTime();\n                const now = new Date().getTime();\n                const duration = Math.floor((endTime - now) / 1000); // in seconds\n                setTimeLeft(duration > 0 ? duration : 0);\n                \n                setLoading(false);\n            } catch (err) {\n                console.error('Error fetching exam:', err);\n                setError('Failed to load exam. Please try again.');\n                setLoading(false);\n            }\n        };\n\n        fetchExam();\n    }, [examId, navigate, user]);\n\n    // Timer effect\n    useEffect(() => {\n        if (!timeLeft || timeLeft <= 0) return;\n\n        const timerId = setInterval(() => {\n            setTimeLeft(timeLeft - 1);\n            \n            // Auto-submit when time runs out\n            if (timeLeft <= 1) {\n                handleSubmit();\n                clearInterval(timerId);\n            }\n        }, 1000);\n\n        return () => clearInterval(timerId);\n    }, [timeLeft]);\n\n    const formatTime = (seconds) => {\n        const hours = Math.floor(seconds / 3600);\n        const minutes = Math.floor((seconds % 3600) / 60);\n        const secs = seconds % 60;\n        \n        return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    };\n\n    const handleAnswerChange = (questionIndex, value) => {\n        setAnswers({\n            ...answers,\n            [questionIndex]: value\n        });\n    };\n\n    const handleSubmit = async () => {\n        if (submitted) return;\n        \n        try {\n            setLoading(true);\n            setSubmitted(true);\n            \n            // Format answers for submission\n            const formattedAnswers = Object.keys(answers).map(index => ({\n                questionId: exam.questions[index]._id,\n                answer: answers[index]\n            }));\n            \n            // Submit exam\n            await ExamService.submitExam(examId, { answers: formattedAnswers });\n            \n            // Redirect to results or dashboard\n            navigate('/student-dashboard', { state: { message: 'Exam submitted successfully!' } });\n        } catch (err) {\n            console.error('Error submitting exam:', err);\n            setError('Failed to submit exam. Please try again.');\n            setSubmitted(false);\n            setLoading(false);\n        }\n    };\n\n    if (loading && !exam) {\n        return (\n            <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n                <div className=\"spinner-border text-primary\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n                <div className=\"bg-white p-8 rounded-lg shadow-md max-w-md w-full\">\n                    <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Error</h2>\n                    <p className=\"text-gray-700\">{error}</p>\n                    <button\n                        onClick={() => navigate('/student-dashboard')}\n                        className=\"mt-6 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    >\n                        Back to Dashboard\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    if (!exam) {\n        return (\n            <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n                <div className=\"bg-white p-8 rounded-lg shadow-md max-w-md w-full\">\n                    <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Exam Not Found</h2>\n                    <p className=\"text-gray-700\">The exam you're looking for doesn't exist or you don't have permission to access it.</p>\n                    <button\n                        onClick={() => navigate('/student-dashboard')}\n                        className=\"mt-6 bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    >\n                        Back to Dashboard\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-md\">\n                <div className=\"flex justify-between items-center mb-6 border-b pb-4\">\n                    <div>\n                        <h1 className=\"text-2xl font-bold text-gray-900\">{exam.title}</h1>\n                        <p className=\"text-gray-600\">{exam.description}</p>\n                    </div>\n                    <div className=\"text-right\">\n                        <div className=\"text-lg font-semibold text-red-600\">\n                            Time Left: {formatTime(timeLeft)}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                            Duration: {exam.duration} minutes\n                        </div>\n                    </div>\n                </div>\n\n                {submitted ? (\n                    <div className=\"bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6\">\n                        <p className=\"font-bold\">Exam Submitted</p>\n                        <p>Your answers have been recorded.</p>\n                    </div>\n                ) : (\n                    <form onSubmit={(e) => { e.preventDefault(); handleSubmit(); }}>\n                        {exam.questions && exam.questions.map((question, index) => (\n                            <div key={index} className=\"mb-8 p-4 border rounded-lg bg-gray-50\">\n                                <div className=\"mb-3\">\n                                    <h3 className=\"text-lg font-semibold text-gray-800\">\n                                        Question {index + 1}: {question.questionText || question.text}\n                                    </h3>\n                                    <div className=\"text-sm text-gray-500\">\n                                        Points: {question.points || 1}\n                                    </div>\n                                </div>\n\n                                {question.questionType === 'multiple-choice' && (\n                                    <div className=\"space-y-2\">\n                                        {question.options && question.options.map((option, optionIndex) => (\n                                            <div key={optionIndex} className=\"flex items-center\">\n                                                <input\n                                                    type=\"radio\"\n                                                    id={`q${index}-option${optionIndex}`}\n                                                    name={`question-${index}`}\n                                                    value={optionIndex}\n                                                    checked={answers[index] === optionIndex.toString()}\n                                                    onChange={() => handleAnswerChange(index, optionIndex.toString())}\n                                                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n                                                />\n                                                <label\n                                                    htmlFor={`q${index}-option${optionIndex}`}\n                                                    className=\"ml-3 block text-gray-700\"\n                                                >\n                                                    {typeof option === 'object' ? option.text : option}\n                                                </label>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n\n                                {question.questionType === 'true-false' && (\n                                    <div className=\"space-y-2\">\n                                        <div className=\"flex items-center\">\n                                            <input\n                                                type=\"radio\"\n                                                id={`q${index}-true`}\n                                                name={`question-${index}`}\n                                                value=\"true\"\n                                                checked={answers[index] === 'true'}\n                                                onChange={() => handleAnswerChange(index, 'true')}\n                                                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n                                            />\n                                            <label\n                                                htmlFor={`q${index}-true`}\n                                                className=\"ml-3 block text-gray-700\"\n                                            >\n                                                True\n                                            </label>\n                                        </div>\n                                        <div className=\"flex items-center\">\n                                            <input\n                                                type=\"radio\"\n                                                id={`q${index}-false`}\n                                                name={`question-${index}`}\n                                                value=\"false\"\n                                                checked={answers[index] === 'false'}\n                                                onChange={() => handleAnswerChange(index, 'false')}\n                                                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n                                            />\n                                            <label\n                                                htmlFor={`q${index}-false`}\n                                                className=\"ml-3 block text-gray-700\"\n                                            >\n                                                False\n                                            </label>\n                                        </div>\n                                    </div>\n                                )}\n\n                                {(question.questionType === 'short-answer' || question.questionType === 'essay') && (\n                                    <div>\n                                        <textarea\n                                            id={`q${index}-answer`}\n                                            name={`question-${index}`}\n                                            value={answers[index]}\n                                            onChange={(e) => handleAnswerChange(index, e.target.value)}\n                                            rows={question.questionType === 'essay' ? 6 : 2}\n                                            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n                                            placeholder=\"Enter your answer here...\"\n                                        ></textarea>\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n\n                        <div className=\"mt-8 flex justify-between\">\n                            <button\n                                type=\"button\"\n                                onClick={() => navigate('/student-dashboard')}\n                                className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                            >\n                                Exit Exam\n                            </button>\n                            <button\n                                type=\"submit\"\n                                disabled={submitted || loading}\n                                className=\"bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                            >\n                                {submitted ? 'Submitted' : loading ? 'Submitting...' : 'Submit Exam'}\n                            </button>\n                        </div>\n                    </form>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default TakeExam;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}