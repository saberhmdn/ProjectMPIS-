{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saber\\\\OneDrive\\\\Bureau\\\\projetMIPS$\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const response = await api.get('/api/auth/me');\n          setUser(response.data);\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Determine login endpoint based on role selection\n      const endpoint = `/api/auth/login`;\n      const response = await api.post(endpoint, {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Store token in localStorage\n      localStorage.setItem('token', token);\n      console.log('Token stored:', token);\n\n      // Set user in state\n      setUser(user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (userData, role) => {\n    try {\n      const endpoint = role === 'teacher' ? '/api/teachers/register' : '/api/students/register';\n      const response = await api.post(endpoint, userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  // Add a function to check if the token is valid\n  const checkToken = () => {\n    const token = localStorage.getItem('token');\n    console.log('Current token in localStorage:', token);\n    return !!token;\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    checkToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","checkLoggedIn","token","localStorage","getItem","response","get","data","error","console","removeItem","login","email","password","endpoint","post","setItem","log","success","register","userData","role","logout","checkToken","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/saber/OneDrive/Bureau/projetMIPS$/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Check if user is already logged in\r\n        const checkLoggedIn = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    const response = await api.get('/api/auth/me');\r\n                    setUser(response.data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth check error:', error);\r\n                localStorage.removeItem('token');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        checkLoggedIn();\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            // Determine login endpoint based on role selection\r\n            const endpoint = `/api/auth/login`;\r\n            \r\n            const response = await api.post(endpoint, { email, password });\r\n            const { token, user } = response.data;\r\n            \r\n            // Store token in localStorage\r\n            localStorage.setItem('token', token);\r\n            console.log('Token stored:', token);\r\n            \r\n            // Set user in state\r\n            setUser(user);\r\n            \r\n            return { success: true };\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (userData, role) => {\r\n        try {\r\n            const endpoint = role === 'teacher' ? '/api/teachers/register' : '/api/students/register';\r\n            const response = await api.post(endpoint, userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n    };\r\n\r\n    // Add a function to check if the token is valid\r\n    const checkToken = () => {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Current token in localStorage:', token);\r\n        return !!token;\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        loading,\r\n        login,\r\n        register,\r\n        logout,\r\n        checkToken\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}